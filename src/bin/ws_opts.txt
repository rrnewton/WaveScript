
WS Interpreter (ws) options:
  -dump <file>  don't go into stream browser, dump output stream to file
  -t            time how long it takes to produce that many tuples 

WS compiler, C backend, version 2 (wsc2) options: 
  -o <file>     base name to use for .c and .exe output
  -nogcc        emit C code but don't invoke C compiler  
  -sigseg <sym> select sigseg implementation: copyalways/seglist
  -gc <sym>     select garbage collector: none/refcount/deferred/boehm
  -gcc <name>   select C compiler, same as setting $CC
  -D <sym>      pass -D<sym> to the C compiler
  -realtime     run timers in realtime, rather than as fast as possible
  -cpus <num>   Limit the number of physical CPUs used.
  -tbb          Use Intel TBB scheduler. Implies -threads. [UNFINISHED]
  -split        

WS compiler, MLton backend (wsmlton) options: 
  -dbg          run in debug mode

WS compiler, C++/XStream backend (wsc) options [deprecated]: 
  -nogcc        emit C code but don't invoke C compiler  
  -c0           only run the WaveScript compiler, stop at C++
  --scheduler <name> xstream scheduler policy; can be train-scheduler,
                     corefit-scheduler-ex, corefit-scheduler-df
  -realtime     run timers in realtime, rather than as fast as possible

Options for all WaveScript (ws*) configurations: 
  -O{0123}      set optimize level for backend compiler
  -dot          dump compiled program to graphviz 
  -noprint      do not print the values returned on the 'main' stream
  -threads      enable threads, if supported by backend
  -nothreads    disable threads
  -ret <name>   custom return stream, rather than 'main' (also -main)
  -opt <name>   enable a specific optimization, currently recognized opts:
                    maxinline -- during meta-languages evaluation
                    mininline -- inline/specialize enough to achieve monomorphism
  -exit-error   exit process on any error, don't enter debugger
  -quiet        suppress output from the WS compiler
  -v <int>      set the verbosity level (-1 ... 5)
  -n <int>      execute only a certain number of tuples and stop 
                (Note, this is an option either for ws, or for the
                resulting executable from the compiler.)

  --disable-pass <pass-name> suppress a specific pass 
  --inspect <pass-name>      inspect output of <pass-name>
  --parem-file <file>        

Environment variables affecting WS compiler:
  
  WAVESCRIPTD -- the location of the directory with the WS/Regiment installation

  WAVESCRIPTHOST -- controls which scheme compiler is used: plt, chez, or ikarus
  REGDEBUGMODE -- Set to ON to enable debug mode
  REGOPTLVL    -- Optimization level for the compiler ITSELF, 0-3

  WS_LINK -- extra flags to be sent to the C compiler at link time
  WS_VERBOSE -- if set to a number (0-5) control verbosity of compiler


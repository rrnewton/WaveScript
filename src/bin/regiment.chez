#! /bin/bash

# This version of the script invokes Regiment using full Chez Scheme.
# It will try to load from, heap, boot file, or .so file in that
# order.  Failing those it will load from source.  If full Chez isn't
# available, it falls back to Petite.

source `dirname $0`/assert_wavescriptd

function setupchez() {
    # Using our own chez wrapper because it obeys "--threaded"
    SCHEME="$WAVESCRIPTD/depends/chez"

    # [2010.06.26] For now disabling the more "flexible" behaviors
    # because it's better to know what's happening:
    #
    # if   [ -e "$CHEZD" ]; 
    #     then SCHEME="$WAVESCRIPTD/depends/chez"
    # # elif (which chez74 > /dev/null); 
    # # 	then SCHEME=chez74;
    # elif (which chez > /dev/null); 
    # 	then SCHEME=chez;
    # elif (which petite > /dev/null); 
    # 	then SCHEME=petite
    # elif [ -f $WAVESCRIPTD/depends/petite ]; 
    # 	then SCHEME="$WAVESCRIPTD/depends/petite"
    # else echo   ERROR:  CHEZ SCHEME not found.; exit -1 
    # fi 
}

# [2010.01.19] Why was this not done at the outset before? 
setupchez;

if [ -e "$CHEZD" ] && [ "$CHEZTHREADED" != "" ]; then
  echo "  (Enabling threaded mode.)"
  MT=`$WAVESCRIPTD/depends/get_machine_type --threaded`
  echo "  Note: Executing WS under Chez Scheme with threading support."
  CHEZARGS="--threaded"
else 
  MT=`$WAVESCRIPTD/depends/get_machine_type`
  CHEZARGS=
fi


## R6RS VERSION:
############################################################

## FIXME: This branch assumes that the command "chez" is in the path.

## What's a good way to check if we're in R6RS mode?
#CHEZVER=`chez --version &> /dev/stdout`
CHEZVER=$($SCHEME --version &> /dev/stdout)
N=`echo $CHEZVER | sed 's/\\.//g'`
ARGS=$*

function from_source() {
  if cd $WAVESCRIPTD/src; then
    echo "WARNING: Loading under Chez from (potentally mixed) source/object files."
    exec $SCHEME $CHEZARGS --program $WAVESCRIPTD/src/wavescript.ss $CURDIR $ARGS
  fi # end if cd /src
}

function go() {
    FILE=$1
    if [ -e $FILE ];
    then exec $SCHEME --program $FILE $CURDIR $ARGS
    else 
      # The boot file is not available, but we've compiled a tree of .so's in the build/ dir:      
      # (This is the method used by "make chezincr2".)
      if [ -e "$WAVESCRIPTD/build/$MT/ws" ]; then        
        CHEZARGS="--libdirs $WAVESCRIPTD/src::$WAVESCRIPTD/build/$MT"
	echo "  Note: Using object files within $WAVESCRIPTD/build/$MT/"
      fi
      from_source
    fi
}

# Only in newer, R6 supporting versions of Chez:
if (( "$N" > 75 )); then 
  # echo "Running in R6 mode.."
  # RUN New R6RS mode:
  CURDIR=`pwd`
  if   [ "$REGOPTLVL" == "3" ];    then go "$WAVESCRIPTD/build/$MT/wavescript.opt.boot"
  elif [ "$REGDEBUGMODE" == "" ];  then go "$WAVESCRIPTD/build/$MT/wavescript.complete.boot"
  else                                  go "$WAVESCRIPTD/build/$MT/wavescript.debug.boot"
  fi
fi # end if version > 75



## PRE R6RS (HACK):
############################################################

echo "USING OLD METHOD"

ARGS=${1+"$@"}

function script() {
    INVOKEDIR=`pwd`
    ENTRY="$WAVESCRIPTD/src/wavescript_chez.ss"
    setupchez;
    echo Executing: exec $SCHEME $1 --script "$ENTRY" "$INVOKEDIR" $ARGS
    exec $SCHEME $1 --script "$ENTRY" "$INVOKEDIR" $ARGS
}

# First we handle the "ws.opt" cases:
if [ "$REGOPTLVL" == "3" ];
then (if [ -f $WAVESCRIPTD/src/build/$MT/wavescript.0.OPT.heap ];
      # If we can we use the stored heap, 
      then exec $WAVESCRIPTD/depends/rawscheme -h $WAVESCRIPTD/src/build/$MT/wavescript.0.OPT.heap $*;
      # Otherwise check for .boot
      elif [ -f "$WAVESCRIPTD/build/$MT/legacy_main_chez_OPT.boot" ]
      then setupchez;
           script "-b $WAVESCRIPTD/src/build/$MT/legacy_main_chez_OPT.boot ";
      # Otherwise fall thruogh to running it as script.
      else script;
      fi);

# Not currently using heaps for debug mode:
elif [ "$REGDEBUGMODE" == "ON" ];
then script;

# [2007.04.15] In progress: going to move over to using boot files.
# Which means invoking with the boot file explicitly here, rather than
# letting the scheme source pick out the .so file.
elif [ -f "$WAVESCRIPTD/build/$MT/legacy_main_chez.boot" ]
then setupchez;
     #exec $SCHEME -b $WAVESCRIPTD/src/build/$MT/main_chez.boot $*;
     script "-b $WAVESCRIPTD/src/build/$MT/legacy_main_chez.boot ";

elif [ -f "$WAVESCRIPTD/src/build/$MT/wavescript.0.heap" ];
then #echo Running wavescript from saved heap...;
    exec $WAVESCRIPTD/depends/rawscheme -h $WAVESCRIPTD/src/build/$MT/wavescript.0.heap $*;
else 
     script;
fi

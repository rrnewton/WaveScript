#!/bin/bash

# This takes the .sml file down to a binary.

if [ ! -f "$1" ];
then echo Usage: "wsmlton-secondphase <query-file.sml> <options ...>";
     echo 
     echo   File \"$1\" does not exist.
     exit 1;
fi

INPUT=$1
shift

if   [ "$WSMLOUTPUT" == "" ]; then WSMLOUTPUT=query.mlton.exe; fi
# Clean up first:
rm -f "$WSMLOUTPUT"

export MLTONARGS="$MLTONARGS -verbose 1 -link-opt -lfftw3f -cc-opt -DWSMLTON -cc-opt -I$WAVESCRIPTD/src/linked_lib "
export WSMLCINCLUDES="$WSMLCINCLUDES $WAVESCRIPTD/src/ws/passes/mlton_bkend/fftw.c "

# I'm having a lot of trouble getting enough quotes around 
# 'allowFFI true' for it to be treated as one token. 
# Thus I'm intruducing helper scripts as a hack:
export MLTON=mlton.hack

if [ "$1" == "-dbg" ]
then export MLTON=mlton.dbg;
     shift;
fi 

if [ "$1" == "-O3" ]
then export MLTON=mlton.opt;
     shift;
fi 


# Pull the extra libraries off the first line of the query file.
############################################################
FIRST=`head -n1 $INPUT`
MATCH=`echo $FIRST | grep "WSLIBDEPS:"`
if [ "$MATCH" != "" ];
then 
   EXTRALIBS=`echo $FIRST | sed "s/.*WSLIBDEPS://"`
   echo Linking extra libraries requested by query file: $EXTRALIBS
   echo 
   #export WSMLCINCLUDES="$WSMLCINCLUDES $EXTRALIBS"
   for inc in $EXTRALIBS; do 

     if [ "${inc#*.}" = "so" ];
     then BASENAME=${inc%.*}
          MLTONARGS+=" -link-opt -l${BASENAME#lib} "
     elif [ -f "$inc" ];
     then WSMLCINCLUDES+=" $inc "
     elif [ -f "$WAVESCRIPTD/lib/$inc" ];
     then WSMLCINCLUDES+=" $WAVESCRIPTD/lib/$inc "; 
     else 
     #WSMLCINCLUDES+=" $inc "
     echo "Couldn't locate include $inc"; exit 1
     fi
   done
   export WSMLCINCLUDES
fi
############################################################


################################################################################

#MLTON="mlton -const 'Exn.keepHistory true'"

#echo "$MLTON -const 'Exn.keepHistory true' -default-ann 'allowFFI true' -output $OUTPUT $FLAGS $INCLUDES query.sml $CINCLUDES"
#echo "$MLTON  -output $OUTPUT $FLAGS $INCLUDES query.sml $CINCLUDES"
#-default-ann 'allowFFI true'
#GRR="'allowFFI true'"

MLEXEC="$MLTON -output $WSMLOUTPUT $MLTONARGS query.sml $WSMLCINCLUDES"
echo "Calling MLton:"
echo "  $MLEXEC"

start=`date +%s`
if 
# For debugging enable keepHistory to get Stack traces:
#$MLTON -const 'Exn.keepHistory true' -default-ann 'allowFFI true' -output $OUTPUT $FLAGS $INCLUDES query.sml $CINCLUDES
#$MLTON -output $OUTPUT $FLAGS $INCLUDES query.sml $CINCLUDES

$MLEXEC

then end=`date +%s`;
     echo "  Time spent in $SML compiler: "$[($end) - ($start)]" second(s)";
     echo "Executable output to: $WSMLOUTPUT";
else echo "$SML returned error!!"; exit -1
fi

